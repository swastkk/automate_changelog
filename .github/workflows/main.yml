name: Create Release Notes

on:
  release:
    types: [published]

jobs:
  create_release_notes:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with: 
          ref: master

      - name: Extract release information
        id: extract_release_info
        run: |
          version="${{ github.event.release.tag_name }}"
          echo "version=$version" >> $GITHUB_ENV
          echo "${{ github.event.release.body }}" > release_notes_body.txt
          echo "::set-output name=body_file::release_notes_body.txt"
          
      - name: Create Release Directory
        run: mkdir -p release_notes
        
      - name: Read release notes file content
        id: read_release_notes
        run: |
          body_file="${{ steps.extract_release_info.outputs.body_file }}"
          if [ -s "$body_file" ]; then
            body=$(cat "$body_file")
            echo "::set-output name=body::$body"
          else
            echo "Error: Release notes body file is empty or does not exist."
            exit 1
          fi
        
      - name: Create release notes file
        run: |
          version="${{ env.version }}"
          body="${{ steps.read_release_notes.outputs.body }}"
          if [ -n "$body" ]; then
            printf "%s\n\n%s\n" "## $version" "$body" > "release_notes/$version.md"
            echo "Release notes for version $version generated."
          else
            echo "Error: Release notes body is empty."
            exit 1
          fi

      - name: Commit and push release notes file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Generate release notes for version ${{ env.version }}"
